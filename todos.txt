- [x] Make it impossible to put 2 houses on the same tile
- [x] Variable tile size houses
	- How to set this in an extensible, not-fucky way?
	- Shared tiles of size 1 with a collider, same for grid elements and houses. 
		Each house can have multiple these colliders attached
		When placing the house, we check every collider if it collides with a free grid space
		1 base scene for a houseGhost, we can inherit from it later. It contains a node for the model, and for the colliders.
			The root of this scene is just a Node3D
			Attached to the root is a script with these methods:
				checkSlots: checks if all the colliders in the Colliders node branch are colliding with a free grid slot
					this doesn't actually need to be true - we can just check if ANY collider is NOT colliding with a free grid slot
					this could actually cause some edge cases and false positives - the ghost colliders should maybe be smaller than 1x1 unit, like 0.9x0.9 units
- [x] Ghost rotation
- [x] Neighbour counter
	- kinda done, but there is a bug in the engine
- [x] Sockets, like "only 1 input socket at start, 1 output socket on right"
	- special effect, or only allow to place stuff when on a socket
	- can be achieved by a similar way like the NeighbourConter did -> Area3D per socket
- [ ] Write down ideas for possible elements
- [x] add debug numbers to grid elements to show the power
	- maybe have a global "DEBUG" flag somewhere 
	  each node with stuff to debug would have a "Debug elements" node/scene which is only shown when this flag is enabled
- [x] Implement possible interactions between 2 set input-output combinations (only output heat, produce heat) 
- [x] A flow of numbers and values towards the exit values via the interactions between the elements
- [x] Add components for a full furnace -> boiler -> piston -> engine (wheel) output
- [x] 27.11.2023 Add a universal component for holding resources per grid component, ResourceBuffer
- [x] 29.11.2023 Refactor existing grid components to use ResourceBuffer
- [x] 30.11.2023 Refactor InputSockets to connect to ResourceBuffers
- [x] 02.12.2023 Fix a bug where putting down a grid component took a different grid space than the one the grid component was placed on
	- It was caused by copying instantiated scenes:
		- GridSpace's scene script has a reference to a collider which it will disable
		- Duplicated GridSpace had references to colliders of their origin scenes (scenes they were duplicated from), when they should have references to colliders which are in their own scene
		- This can be inspected by starting the game, and inspecting the remote - the scenes get unfurled
		- eg. before 02.12.2023, GridSpace16's collider references a collider belonging to GridSpace11's
		- This was fixed by resetting the collider in these scene instances -> this turns them back to original scene's path, which is the collider below the scene
- [x] 03.12.2023 Add an option to delete placed objects and re-enable the spots to be taken by other objects
	- This could be implemented by passing a reference to spots taken while the object is being created
		- or, passing a method (lambda with parameters filled in) that will free these spots, so that only gridMangager will need to know how to free the space
		
--- CAR MODULE START ---
- [x] 04.12.2023 Find or implement a simple driving model
- [ ] Find/create a free map for driving a car
- [x] 07.12.2023 Switch between placement and driving scenes
- [x] 08.12.2023 Fix a bug with grid placement not working after changing scenes
- [x] 08.12.2023 Expose the driving parameters to some changeable variables
- [x] 08.12.2023 Have placement scene output numbers impact the diving characteristics 
- [x] 16.12.2023 Refactor driving characteristics being derived from grid placement into using signals


--- SHARED MODULE ---
- [ ] Set up a pressure system for the engine
- [x] make the steam boiler EXPLODE!!!!! when the pressure is too high
- [ ] make a button that releases pressure in all boilers and makes a horn sound
- [ ] make a GUI showing the components of the engine, with their state
- [ ] tie this functioncality to some GUI

# small tweaks and TODOs:
- [x] 03.12.2023 Refactor the PlacedObjects from StaticBody3D to Node3D with a child Collider, so that they can have a consistent collider object
	- used scene inheritance to make this happen
- [x] 03.12.2023 Make the component ghosts use SceneInheritance as well

# nice to have
- [ ] Spedometer graphic
- [ ] UI for previewing the selected component
- [ ] UI for selecting the components
- [ ] Changing ghost color when placement is invalid
	- might have to investigate shaders in Godot
